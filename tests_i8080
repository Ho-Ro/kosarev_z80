
#   Z80 CPU Simulator.
#   https://github.com/kosarev/z80
#
#   Copyright (C) 2017-2019 Ivan Kosarev.
#   ivan@kosarev.info
#
#   Published under the MIT license.

# CALL nn
cddf0e call 0x0edf
 0 get_pc_on_fetch 0000
 0 fetch cd at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 3t_4t_imm16_read 0edf at 0001
 4   get_pc_on_imm16_read 0001
 4   3t_read df at 0001
 4     set_addr_bus 0000 -> 0001
 7   4t_read 0e at 0002
 7     set_addr_bus 0001 -> 0002
11   set_pc_on_imm16_read 0001 -> 0003
11 get_sp 0000
11 3t_write 00 -> 00 at ffff
11   set_addr_bus 0002 -> ffff
14 3t_write 00 -> 03 at fffe
14   set_addr_bus ffff -> fffe
17 set_sp 0000 -> fffe
17 set_memptr 0000 -> 0edf
17 set_pc_on_call 0003 -> 0edf
17 done

# Ccc, nn
c4550c cnz 0x0c55
 0 get_pc_on_fetch 0000
 0 fetch c4 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 5t_fetch
 5 3t_3t_imm16_read 0c55 at 0001
 5   get_pc_on_imm16_read 0001
 5   3t_read 55 at 0001
 5     set_addr_bus 0000 -> 0001
 8   3t_read 0c at 0002
 8     set_addr_bus 0001 -> 0002
11   set_pc_on_imm16_read 0001 -> 0003
11 get_f 00
11 get_sp 0000
11 3t_write 00 -> 00 at ffff
11   set_addr_bus 0002 -> ffff
14 3t_write 00 -> 03 at fffe
14   set_addr_bus ffff -> fffe
17 set_sp 0000 -> fffe
17 set_memptr 0000 -> 0c55
17 set_pc_on_call 0003 -> 0c55
17 done

# DI
f3 di
 0 get_pc_on_fetch 0000
 0 fetch f3 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 set_iff_on_di 0 -> 0
 4 done

# EI
fb ei
 0 get_pc_on_fetch 0000
 0 fetch fb at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 set_iff_on_ei 0 -> 1
 4 disable_int
 4 done

# HLT
76 hlt
 0 get_pc_on_fetch 0000
 0 fetch 76 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 7 get_pc_on_halt 0001
 7 set_pc_on_halt 0001 -> 0000
 7 done

# MVI r, n
3eaf mvi a, 0xaf
 0 get_pc_on_fetch 0000
 0 fetch 3e at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 3t_imm8_read af at 0001
 4   get_pc_on_imm8_read 0001
 4   3t_read af at 0001
 4     set_addr_bus 0000 -> 0001
 7   set_pc_on_imm8_read 0001 -> 0002
 7 set_a 00 -> af
 7 done

# MOV r, r
47 mov b, a
 0 get_pc_on_fetch 0000
 0 fetch 47 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 5t_fetch
 5 get_a 00
 5 set_b 00 -> 00
 5 done

# NOP
00 nop
 0 get_pc_on_fetch 0000
 0 fetch 00 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 done

# RET
c9 ret
 0 get_pc_on_fetch 0000
 0 fetch c9 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 get_sp 0000
 4 3t_read c9 at 0000
 4   set_addr_bus 0000 -> 0000
 7 3t_read 00 at 0001
 7   set_addr_bus 0000 -> 0001
10 set_sp 0000 -> 0002
10 set_memptr 0000 -> 00c9
10 set_pc_on_return 0001 -> 00c9
10 done

# Rcc
c0 rnz
 0 get_pc_on_fetch 0000
 0 fetch c0 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 5t_fetch
 5 get_f 00
 5 get_sp 0000
 5 3t_read c0 at 0000
 5   set_addr_bus 0000 -> 0000
 8 3t_read 00 at 0001
 8   set_addr_bus 0000 -> 0001
11 set_sp 0000 -> 0002
11 set_memptr 0000 -> 00c0
11 set_pc_on_return 0001 -> 00c0
11 done

# RST nn
d7 rst 0x0010
 0 get_pc_on_fetch 0000
 0 fetch d7 at 0000
 0   set_addr_bus 0000 -> 0000
 4 set_pc_on_fetch 0000 -> 0001
 4 5t_fetch
 5 get_sp 0000
 5 3t_write 00 -> 00 at ffff
 5   set_addr_bus 0000 -> ffff
 8 3t_write 00 -> 01 at fffe
 8   set_addr_bus ffff -> fffe
11 set_sp 0000 -> fffe
11 set_memptr 0000 -> 0010
11 set_pc_on_call 0001 -> 0010
11 done
